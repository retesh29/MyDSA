
  // Function to return a list containing the inorder traversal of the tree.
    ArrayList<Integer> inOrder(Node root) {
        // iterative inorder
        // T & S= O(n)
        
        ArrayList<Integer> ans = new ArrayList<Integer> ();
        
        if(root == null) return ans;
        
        Stack<Node> s = new Stack<>();
        

        Node curr = root;
        
        while( (!s.isEmpty()) || curr != null){
            
               
               while( curr != null){
                  
                   s.push(curr);
                   curr = curr.left;
                  

               }
               
               curr =  s.pop();
               
               ans.add(curr.data);
               
               curr = curr.right;
               
            
            
        }
        
        return ans;
    }
