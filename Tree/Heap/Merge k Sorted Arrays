class Solution
{
    //Function to merge k sorted arrays.
    public static ArrayList<Integer> mergeKArrays(int[][] arr,int K) 
    {   
        
        // edge 
        
        if( K == 0 ) return new  ArrayList<Integer>();
        // Write your code here.
        // step 1: make k size min heap and insert 
        //  first element of every array
                                                        // acsending order of object based on data
        PriorityQueue<Node> minHeap = new PriorityQueue<>((a,b)->(a.data - b.data));
        
        
        for(int row =0; row < K; row++){
                
                minHeap.add( new Node(row,0, arr[row][0]));
            
        }
        
        // step 2  pop top element and and push the element 
         ArrayList<Integer>  ans = new ArrayList<>();
        
        while( !minHeap.isEmpty()){
            
            
            // pop 
            
            Node temp = minHeap.poll();
            
            ans.add( temp.data);
            
            // push the next element of the curr array
            
            if( temp.col + 1 < arr[0].length && temp.row < K){
                
                minHeap.add(new Node(temp.row, temp.col+1, arr[temp.row][temp.col+1]));
            }
        }
        
        
        return ans;
        
        
        
    }
    
    
    
    
 static class Node{
    
    int row ;
    int col ;
    int data;
    
    Node(int row, int col, int data){
        
        this.row = row;
        this.col = col;
        this.data = data;
    }
}
}
